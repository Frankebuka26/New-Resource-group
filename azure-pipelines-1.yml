trigger: none

pool:
  name: Default

variables:
 - group: Mytfsecrets2

parameters:
  - name: stages
    type: object
    default:
      - name: dev
      - name: prod

stages:
  - stage: plan
    jobs:
      - job: plan
        continueOnError: false
        steps:
         - task: TerraformInstaller@1
           displayName: tfinstall
           inputs:
             terraformVersion: 'latest'

         - script: 
             echo "Initialization Terraform..."
             terraform init
           displayName: 'Terraform Init'

         - script: 
             echo "Planning Terraform.."
             terraform plan -out=tfplan
           displayName: 'Terraform Plan'

           env:
             ARM_CLIENT_ID: $(ARM_CLIENT_ID)
             ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
             ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
             ARM_TENANT_ID: $(ARM_TENANT_ID)

  - ${{each stage in parameters.stages}}:
    - stage: ${{stage.name}}
      dependsOn: plan
      condition: succeeded()
      variables:
      - group: vg-${{stage.name}}
      jobs:
        - deployment: ${{stage.name}}_deploy
          environment: ${{stage.name}}_Resourcegroup
          strategy:
            runOnce:
             deploy:
               steps:
               - task: TerraformInstaller@1
                 displayName: tfinstall
                 inputs:
                   terraformVersion: 'latest'

               - script: 
                   echo "Initialization Terraform..."
                   terraform init
                 displayName: 'Terraform Init'

               - script: 
                   echo "Applying Terraform.."
                   terraform plan -out=tfplan -autoapprove
                 displayName: 'Terraform Apply'

                 env:
                   ARM_CLIENT_ID: $(ARM_CLIENT_ID)
                   ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
                   ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
                   ARM_TENANT_ID: $(ARM_TENANT_ID)